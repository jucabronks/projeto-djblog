name: üåê Deploy Site Est√°tico

on:
  # Executar quando push para main
  push:
    branches: [ main ]
  
  # Executar quando EventBridge dispara (via webhook)
  repository_dispatch:
    types: [update-news]
  
  # Executar diariamente √†s 7:00 UTC (4:00 BRT)
  schedule:
    - cron: '0 7 * * *'
  
  # Permitir execu√ß√£o manual
  workflow_dispatch:

# Configurar permiss√µes para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Garantir que apenas um deploy rode por vez
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Gerar site est√°tico
  generate-site:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üêç Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: üì¶ Install dependencies
      run: |
        pip install boto3 requests feedparser
        
    - name: üîß Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: üåê Generate responsive static site
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        DYNAMODB_TABLE_NAME: ${{ secrets.DYNAMODB_TABLE_NAME }}
      run: |
        echo "üöÄ Gerando site est√°tico responsivo e otimizado para SEO..."
        python generate_static_site.py
        
        # Criar estrutura otimizada do site
        mkdir -p site/assets/images
        mkdir -p site/assets/icons
        
        # Mover HTML principal
        mv index.html site/
        
        # Criar robots.txt
        echo "User-agent: *" > site/robots.txt
        echo "Allow: /" >> site/robots.txt
        echo "Sitemap: https://jucabronks.github.io/projeto-djblog/sitemap.xml" >> site/robots.txt
        
        # Criar sitemap.xml b√°sico
        echo '<?xml version="1.0" encoding="UTF-8"?>' > site/sitemap.xml
        echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> site/sitemap.xml
        echo '  <url>' >> site/sitemap.xml
        echo '    <loc>https://jucabronks.github.io/projeto-djblog/</loc>' >> site/sitemap.xml
        echo "    <lastmod>$(date -u +%Y-%m-%d)</lastmod>" >> site/sitemap.xml
        echo '    <changefreq>daily</changefreq>' >> site/sitemap.xml
        echo '    <priority>1.0</priority>' >> site/sitemap.xml
        echo '  </url>' >> site/sitemap.xml
        echo '</urlset>' >> site/sitemap.xml
        
        echo "‚úÖ Site est√°tico responsivo gerado com sucesso!"
        echo "üìä Estrutura:"
        ls -la site/
          justify-content: space-between;
          align-items: center;
        }
        
        .logo {
          font-size: 1.8rem;
          font-weight: bold;
        }
        
        .timestamp {
          font-size: 0.9rem;
          opacity: 0.9;
        }
        
        main {
          padding: 2rem 0;
        }
        
        .news-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
          gap: 2rem;
        }
        
        .news-card {
          background: white;
          border-radius: 10px;
          padding: 1.5rem;
          box-shadow: 0 4px 6px rgba(0,0,0,0.1);
          transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .news-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 8px 15px rgba(0,0,0,0.2);
        }
        
        .news-title {
          font-size: 1.3rem;
          font-weight: bold;
          margin-bottom: 0.5rem;
          color: #2c3e50;
        }
        
        .news-title a {
          color: inherit;
          text-decoration: none;
        }
        
        .news-title a:hover {
          color: #667eea;
        }
        
        .news-summary {
          color: #666;
          margin-bottom: 1rem;
          line-height: 1.6;
        }
        
        .news-meta {
          display: flex;
          justify-content: space-between;
          align-items: center;
          font-size: 0.9rem;
          color: #888;
          border-top: 1px solid #eee;
          padding-top: 0.5rem;
        }
        
        .news-source {
          font-weight: 500;
          color: #667eea;
        }
        
        .stats {
          background: white;
          border-radius: 10px;
          padding: 1.5rem;
          margin-bottom: 2rem;
          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          text-align: center;
        }
        
        .stats h2 {
          color: #2c3e50;
          margin-bottom: 1rem;
        }
        
        .stats-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
          gap: 1rem;
        }
        
        .stat-item {
          padding: 1rem;
          background: #f8f9fa;
          border-radius: 8px;
        }
        
        .stat-number {
          font-size: 2rem;
          font-weight: bold;
          color: #667eea;
        }
        
        .stat-label {
          color: #666;
          font-size: 0.9rem;
        }
        
        footer {
          background: #2c3e50;
          color: white;
          text-align: center;
          padding: 2rem 0;
          margin-top: 3rem;
        }
        
        @media (max-width: 768px) {
          .header-content {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
          }
          
          .news-grid {
            grid-template-columns: 1fr;
          }
          
          .stats-grid {
            grid-template-columns: 1fr;
          }
        }
        EOF
        
        # Criar JavaScript para funcionalidades
        cat > site/assets/js/app.js << 'EOF'
        // Funcionalidades do site
        document.addEventListener('DOMContentLoaded', function() {
          // Adicionar anima√ß√µes suaves
          const cards = document.querySelectorAll('.news-card');
          
          const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
              }
            });
          });
          
          cards.forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
          });
          
          // Atualizar timestamp automaticamente
          const updateTimestamp = () => {
            const now = new Date();
            const timestamp = document.getElementById('current-timestamp');
            if (timestamp) {
              timestamp.textContent = now.toLocaleString('pt-BR', {
                timeZone: 'America/Sao_Paulo',
                day: '2-digit',
                month: '2-digit', 
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
              });
            }
          };
          
          updateTimestamp();
          setInterval(updateTimestamp, 60000); // Atualizar a cada minuto
        });
        EOF
        
    - name: üìä Generate health report
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        DYNAMODB_TABLE_NAME: ${{ secrets.DYNAMODB_TABLE_NAME }}
      run: |
        python monitor_sistema.py
        mv health_report.json site/health.json
        
    - name: üìÅ Setup Pages
      uses: actions/configure-pages@v4
      
    - name: üì§ Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './site'
        
    - name: üöÄ Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job para notificar status
  notify:
    needs: generate-site
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: üìß Notify deployment status
      if: failure()
      run: |
        echo "‚ö†Ô∏è Deploy falhou! Verifique os logs."
        # Aqui voc√™ pode adicionar notifica√ß√µes por email/Slack/Discord
        
    - name: ‚úÖ Success notification  
      if: success()
      run: |
        echo "üéâ Site atualizado com sucesso!"
        echo "üåê URL: https://${{ github.repository_owner }}.github.io/projeto-djblog"

name: CI/CD Serverless News Blog

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes
        run: |
          python -m pytest tests/ -v

      - name: Lint (opcional)
        run: |
          pip install flake8
          flake8 .

  package-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Empacotar Lambdas
        run: |
          rm -f *.zip
          zip -j lambda_coletor.zip lambda_coletor.py utils.py summarize_ai.py
          zip -j lambda_publicar_wordpress.zip lambda_publicar_wordpress.py utils.py
          zip -j lambda_limpeza.zip lambda_limpeza.py utils.py
          zip -j lambda_health_check.zip lambda_health_check.py utils.py

      - name: Deploy via Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          ALARM_EMAIL: ${{ secrets.ALARM_EMAIL }}
          # Adicione outros segredos conforme necessário
        run: |
          cd terraform/aws
          terraform init
          terraform apply -auto-approve 
#!/usr/bin/env python3
"""
Teste r√°pido do site sem SSL para verificar funcionamento
"""

import requests
import socket
from datetime import datetime

def testar_acesso_http():
    """Testa acesso HTTP (sem SSL) aos dom√≠nios"""
    print("üß™ TESTE R√ÅPIDO - ACESSO HTTP")
    print("=" * 40)
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print()
    
    # 1. Testa CloudFront direto
    print("1Ô∏è‚É£ CLOUDFRONT DIRETO:")
    try:
        response = requests.get("https://d3q2d002qno2yn.cloudfront.net", timeout=10)
        print(f"   Status: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ CloudFront funcionando!")
        else:
            print(f"   ‚ùå Erro: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")
    
    # 2. Verifica resolu√ß√£o DNS
    dominios = ["noticiasontem.com.br", "www.noticiasontem.com.br"]
    
    print("\n2Ô∏è‚É£ RESOLU√á√ÉO DNS:")
    for dominio in dominios:
        try:
            ip = socket.gethostbyname(dominio)
            print(f"   {dominio} ‚Üí {ip}")
        except:
            print(f"   {dominio} ‚Üí ‚ùå N√£o resolvido")
    
    # 3. Testa acesso HTTP (sem SSL)
    print("\n3Ô∏è‚É£ TESTE HTTP (SEM SSL):")
    for dominio in dominios:
        try:
            # Tenta HTTP primeiro (para evitar erro SSL)
            response = requests.get(f"http://{dominio}", timeout=10, allow_redirects=False)
            print(f"   http://{dominio} ‚Üí {response.status_code}")
            
            if response.status_code == 301 or response.status_code == 302:
                print(f"      Redirecionamento para: {response.headers.get('Location', 'N/A')}")
                
        except Exception as e:
            print(f"   http://{dominio} ‚Üí ‚ùå {e}")
    
    print("\n" + "=" * 40)
    print("üìã DIAGN√ìSTICO:")
    print("‚úÖ CloudFront: Funcionando")
    print("üîÑ DNS: Em propaga√ß√£o")
    print("‚è≥ SSL: Precisa configurar certificado")
    print("=" * 40)

if __name__ == "__main__":
    testar_acesso_http()

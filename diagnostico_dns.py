#!/usr/bin/env python3
"""
Diagn√≥stico DNS Avan√ßado - 40 minutos sem propaga√ß√£o
"""

import subprocess
import time
from datetime import datetime

def diagnosticar_dns():
    print("üö® DIAGN√ìSTICO DNS - 40 MINUTOS SEM PROPAGA√á√ÉO")
    print("=" * 50)
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print()
    
    print("üîç TESTANDO DNS EM SERVIDORES EXTERNOS:")
    print("-" * 40)
    
    # Teste com DNS do Google
    print("üì° Testando com DNS Google (8.8.8.8)...")
    try:
        result = subprocess.run(["nslookup", "noticiasontem.com.br", "8.8.8.8"], 
                              capture_output=True, text=True, timeout=15)
        if "cloudfront" in result.stdout.lower():
            print("‚úÖ Google DNS: FUNCIONANDO!")
        else:
            print("‚ùå Google DNS: N√£o encontrou CloudFront")
            print(f"Resposta: {result.stdout[:200]}")
    except Exception as e:
        print(f"‚ùå Google DNS: Erro - {e}")
    
    print()
    
    # Teste com DNS Cloudflare
    print("üì° Testando com DNS Cloudflare (1.1.1.1)...")
    try:
        result = subprocess.run(["nslookup", "www.noticiasontem.com.br", "1.1.1.1"], 
                              capture_output=True, text=True, timeout=15)
        if "cloudfront" in result.stdout.lower():
            print("‚úÖ Cloudflare DNS: FUNCIONANDO!")
        else:
            print("‚ùå Cloudflare DNS: N√£o encontrou CloudFront")
            print(f"Resposta: {result.stdout[:200]}")
    except Exception as e:
        print(f"‚ùå Cloudflare DNS: Erro - {e}")
    
    print()
    print("üîß AN√ÅLISE AP√ìS 40 MINUTOS:")
    print("=" * 30)
    print("‚ö†Ô∏è  40 minutos √© tempo suficiente para propaga√ß√£o")
    print("üîç Poss√≠veis problemas:")
    print("   1. Configura√ß√£o incorreta no Registro.br")
    print("   2. Cache DNS muito agressivo")
    print("   3. Problema com CNAME para CloudFront")
    print()
    print("üõ†Ô∏è  RECOMENDA√á√ïES:")
    print("   1. Verificar registros no painel Registro.br")
    print("   2. Testar com navegador em modo an√¥nimo")
    print("   3. Limpar cache DNS: ipconfig /flushdns")

if __name__ == "__main__":
    diagnosticar_dns()
